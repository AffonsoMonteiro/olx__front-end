[{"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\index.js":"1","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\App.js":"2","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\Reducers.js":"3","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\reducers\\userReducer.js":"4","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\Routes.js":"5","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\About\\index.js":"6","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\Home\\index.js":"7","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\MainComponents.js":"8","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\Header\\index.js":"9","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\Header\\styled.js":"10","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\Footer\\index.js":"11","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\Footer\\styled.js":"12","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\helpers\\AuthHandler.js":"13","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\NotFound\\index.js":"14","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\helpers\\OlxAPI.js":"15","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\SignUp\\index.js":"16","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\SignUp\\styled.js":"17","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\Home\\styled.js":"18","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\AdItem\\index.js":"19","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\AdItem\\styled.js":"20","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\AdPage\\index.js":"21","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\AdPage\\styled.js":"22","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\SignIn\\index.js":"23","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\SignIn\\styled.js":"24","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\AddAd\\index.js":"25","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\AddAd\\styled.js":"26","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\RouteHandler.js":"27","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\Ads\\index.js":"28","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\Ads\\styled.js":"29"},{"size":345,"mtime":1609201749352,"results":"30","hashOfConfig":"31"},{"size":678,"mtime":1609551865264,"results":"32","hashOfConfig":"31"},{"size":152,"mtime":1609201989188,"results":"33","hashOfConfig":"31"},{"size":225,"mtime":1609202372023,"results":"34","hashOfConfig":"31"},{"size":1315,"mtime":1609716379005,"results":"35","hashOfConfig":"31"},{"size":130,"mtime":1609205019712,"results":"36","hashOfConfig":"31"},{"size":3493,"mtime":1609382327621,"results":"37","hashOfConfig":"31"},{"size":472,"mtime":1609373518420,"results":"38","hashOfConfig":"31"},{"size":2154,"mtime":1609635334955,"results":"39","hashOfConfig":"31"},{"size":1768,"mtime":1609355074646,"results":"40","hashOfConfig":"31"},{"size":210,"mtime":1609208207349,"results":"41","hashOfConfig":"31"},{"size":126,"mtime":1609208135546,"results":"42","hashOfConfig":"31"},{"size":409,"mtime":1609355230392,"results":"43","hashOfConfig":"31"},{"size":274,"mtime":1609251950995,"results":"44","hashOfConfig":"31"},{"size":2867,"mtime":1609644300703,"results":"45","hashOfConfig":"31"},{"size":5296,"mtime":1609369093331,"results":"46","hashOfConfig":"31"},{"size":1676,"mtime":1609356912962,"results":"47","hashOfConfig":"31"},{"size":2157,"mtime":1609385986185,"results":"48","hashOfConfig":"31"},{"size":721,"mtime":1609631559509,"results":"49","hashOfConfig":"31"},{"size":619,"mtime":1609386430600,"results":"50","hashOfConfig":"31"},{"size":5496,"mtime":1609630211828,"results":"51","hashOfConfig":"31"},{"size":2556,"mtime":1609629986238,"results":"52","hashOfConfig":"31"},{"size":3317,"mtime":1609634263555,"results":"53","hashOfConfig":"31"},{"size":1676,"mtime":1609634269007,"results":"54","hashOfConfig":"31"},{"size":6730,"mtime":1609644552521,"results":"55","hashOfConfig":"31"},{"size":1814,"mtime":1609639489461,"results":"56","hashOfConfig":"31"},{"size":458,"mtime":1609635237310,"results":"57","hashOfConfig":"31"},{"size":2593,"mtime":1609720682069,"results":"58","hashOfConfig":"31"},{"size":1343,"mtime":1609720984605,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1azj87",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\index.js",[],["126","127"],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\App.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\Reducers.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\reducers\\userReducer.js",["128"],"const initialState = {\r\n    email: '',\r\n}\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    if(action.type === 'SET_EMAIL') {\r\n        return { ...state, email: action.payload.email}\r\n    }\r\n\r\n    return state\r\n}","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\Routes.js",["129"],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\About\\index.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\Home\\index.js",["130","131","132"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { PageArea, SearchArea } from './styled' \r\nimport useApi from '../../helpers/OlxAPI'\r\n\r\n\r\nimport { PageContainer } from '../../components/MainComponents'\r\nimport AdItem from '../../components/partials/AdItem'\r\n\r\nfunction SignIn() {\r\n    const api = useApi()\r\n\r\n    const [ stateList, setStateList] = useState([])\r\n    const [ categories, setCategories] = useState([])\r\n    const [ adList, setAdList] = useState([])\r\n\r\n    useEffect( () => {\r\n        const getStates = async () => {\r\n            const slist = await api.getStates()\r\n            setStateList(slist)\r\n        }\r\n        getStates()\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        const getCategories = async () => {\r\n            const cats = await api.getCategories()\r\n            setCategories(cats)\r\n        }\r\n        getCategories()\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        const getRecentsAds = async () => {\r\n            const json = await api.getAds({\r\n                sort: 'desc',\r\n                limit: 8\r\n            })\r\n            setAdList(json.ads)\r\n         }\r\n         getRecentsAds()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <SearchArea>\r\n                <PageContainer>\r\n                    <div className=\"searchBox\">\r\n                        <form method=\"POST\" action=\"/ads\">\r\n                            <input type=\"text\" name=\"q\" placeholder=\"O que você procura?\" />\r\n                            <select name=\"state\">\r\n                                {stateList.map( (i, k) =>\r\n                                    <option key={k} value={i.name}> {i.name} </option>\r\n                                )}  \r\n                            </select>\r\n                            <button>Pesquisar</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"categoryList\">\r\n                        {categories.map((i, k) => \r\n                            <Link key={k} to={`/ads?cats=${i.slug}`} className=\"categoryItem\" >\r\n                                <img src={i.img} alt={i.name} />\r\n                                <span> {i.name} </span>\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                </PageContainer>\r\n            </SearchArea>\r\n\r\n            <PageContainer>\r\n                <PageArea>\r\n                    <h2>Anúncios Recentes</h2>\r\n                    <div className=\"list\">\r\n                        {adList.map((i, k) => \r\n                            <AdItem key={k} data={i} />\r\n                        )}\r\n                    </div>\r\n                    <Link to=\"/ads\" className=\"seeAllLink\" >Ver todos</Link>\r\n\r\n                    <hr/> \r\n\r\n                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n                </PageArea>\r\n            </PageContainer>\r\n        </>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default SignIn","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\MainComponents.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\Header\\index.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\Header\\styled.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\Footer\\index.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\Footer\\styled.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\helpers\\AuthHandler.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\NotFound\\index.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\helpers\\OlxAPI.js",["133"],"import Cookies from 'js-cookie'\r\nimport qs from 'qs'\r\n\r\n\r\nconst BASEAPI = 'http://alunos.b7web.com.br:501'\r\n\r\nconst apiFetchFile = async (endpoint, body) => {\r\n    if(!body.token) {\r\n        let token = Cookies.get('token')\r\n        if(token) {\r\n            body.append('token', token)\r\n        }\r\n    }\r\n\r\n    const res = await fetch(BASEAPI + endpoint, {\r\n        method: 'POST',\r\n        body\r\n    })\r\n\r\n    const json = res.json()\r\n\r\n    if(json.notallowed) {\r\n        window.location.href = '/signin'\r\n        return\r\n    }\r\n\r\n    return json\r\n}\r\n\r\nconst apiFetchPost = async (endpoint, body) => {\r\n    if(!body.token) {\r\n        let token = Cookies.get('token')\r\n        if(token) {\r\n            body.token = token\r\n        }\r\n    }\r\n\r\n    const res = await fetch(BASEAPI + endpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    })\r\n\r\n    const json = res.json()\r\n\r\n    if(json.notallowed) {\r\n        window.location.href = '/signin'\r\n        return\r\n    }\r\n\r\n    return json\r\n}\r\n\r\nconst apiFetchGet = async (endpoint, body = []) => {\r\n    if(!body.token) {\r\n        let token = Cookies.get('token')\r\n        if(token) {\r\n            body.token = token\r\n        }\r\n    }\r\n\r\n    const res = await fetch(`${BASEAPI + endpoint}?${qs.stringify(body)}` )\r\n    const json = await res.json()\r\n\r\n    if(json.notallowed) {\r\n        window.location.href = '/signin'\r\n        return\r\n    }\r\n\r\n    return json\r\n}\r\n\r\nconst OlxAPI = {\r\n\r\n    login:async (email, password) => {\r\n        // fazer consulta ao WebService\r\n        const json = await apiFetchPost(\r\n            '/user/signin',\r\n            { email, password}\r\n        )\r\n        return json\r\n        \r\n    },\r\n\r\n    register:async (name, email, password, stateLoc) => {\r\n        const json = await apiFetchPost(\r\n            '/user/signup',\r\n            {name, email, password, state:stateLoc}\r\n        )\r\n        return json\r\n    },\r\n\r\n    getStates:async () => {\r\n        const json = await apiFetchGet(\r\n            '/states'\r\n        );\r\n        return json.states;\r\n    },\r\n\r\n    getCategories:async () => {\r\n        const json = await apiFetchGet(\r\n            '/categories'\r\n        ) \r\n        return json.categories\r\n    }, \r\n    \r\n    getAds:async (options) => {\r\n        const json = await apiFetchGet(\r\n            '/ad/list',\r\n            options\r\n        )\r\n        return json\r\n    },\r\n\r\n    getAd:async (id, other = false) => {\r\n        const json = await apiFetchGet(\r\n            '/ad/item',\r\n            {id, other}\r\n        )\r\n        return json\r\n    },\r\n\r\n    addAd:async(fData) => {\r\n        const json = await apiFetchFile(\r\n            '/ad/add',\r\n            fData\r\n        )\r\n        return json\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default () => OlxAPI","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\SignUp\\index.js",["134"],"import React, { useState, useEffect } from 'react';\r\nimport { PageArea } from './styled' \r\nimport useApi from '../../helpers/OlxAPI'\r\nimport { doLogin } from '../../helpers/AuthHandler'\r\n\r\n\r\nimport { PageContainer, PageTitle, ErrorMessage } from '../../components/MainComponents'\r\n\r\nfunction SignIn() {\r\n    const api = useApi()\r\n\r\n    const [ name, setName] = useState('')\r\n    const [ stateLoc, setStateLoc] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [ confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [ stateList, setStateList] = useState([])\r\n\r\n    const [ disabled, setDisabled] = useState(false)\r\n    const [ error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        const getStates = async () => {\r\n            const slist = await api.getStates()\r\n            \r\n            setStateList(slist)\r\n        }\r\n\r\n        getStates()\r\n    }, [])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setDisabled(true)\r\n        setError('')\r\n\r\n\r\n        if(password !==  confirmPassword) {\r\n            setError('Senhas não batem')\r\n            setDisabled(false)\r\n            return\r\n        }\r\n        \r\n        const json = await api.register(name, email, password, stateLoc)\r\n\r\n        if(json.error) {\r\n            setError(json.error)\r\n        } else {\r\n            doLogin(json.token)\r\n            window.location.href = '/'\r\n        }\r\n\r\n        setDisabled(false)\r\n    }\r\n\r\n    return (\r\n        <PageContainer>\r\n            <PageTitle>Cadastro</PageTitle>\r\n            <PageArea>\r\n                { error && \r\n                    <ErrorMessage> {error}</ErrorMessage>\r\n                }\r\n                <form onSubmit={handleSubmit}>\r\n                    <label className=\"area\">\r\n                            <div className=\"area--title\">Nome Completo</div>\r\n                            <div className=\"area--input\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    disabled={disabled} \r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </label>\r\n                        <label className=\"area\">\r\n                        <div className=\"area--title\">Estado</div>\r\n                        <div className=\"area--input\">\r\n                            <select value={stateLoc} onChange={e=>setStateLoc(e.target.value)} required>\r\n                                <option></option>\r\n                                {stateList.map((i,k)=>\r\n                                    <option key={k} value={i._id}>{i.name}</option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n                    </label>\r\n                        <label className=\"area\">\r\n                            <div className=\"area--title\">E-mail</div>\r\n                            <div className=\"area--input\">\r\n                                <input \r\n                                    type=\"email\"\r\n                                    disabled={disabled} \r\n                                    value={email}\r\n                                    onChange={e => setEmail(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </label>\r\n                        <label className=\"area\">\r\n                            <div className=\"area--title\">Senha</div>\r\n                            <div className=\"area--input\">\r\n                                <input \r\n                                    type=\"password\" \r\n                                    disabled={disabled} \r\n                                    value={password}\r\n                                    onChange={e => setPassword(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </label>\r\n                        <label className=\"area\">\r\n                            <div className=\"area--title\">Confirmar Senha</div>\r\n                            <div className=\"area--input\">\r\n                                <input \r\n                                    type=\"password\" \r\n                                    disabled={disabled} \r\n                                    value={confirmPassword}\r\n                                    onChange={e => setConfirmPassword(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </label>\r\n                        <label className=\"area\">\r\n                            <div className=\"area--title\"></div>\r\n                            <div className=\"area--input\">\r\n                                <button disabled={disabled}>Cadastrar</button>\r\n                            </div>\r\n                        </label>\r\n                </form>\r\n            </PageArea>\r\n        </PageContainer>\r\n    )\r\n}\r\n\r\nexport default SignIn","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\SignUp\\styled.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\Home\\styled.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\AdItem\\index.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\partials\\AdItem\\styled.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\AdPage\\index.js",["135","136"],"import React, { useState, useEffect } from 'react';\r\nimport { Slide } from 'react-slideshow-image';\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { PageArea, Fake, OthersArea, BreadChumb } from './styled' \r\nimport useApi from '../../helpers/OlxAPI'\r\n\r\n\r\nimport { PageContainer } from '../../components/MainComponents'\r\nimport AdItem from '../../components//partials/AdItem'\r\n\r\nfunction SignIn() {\r\n    const api = useApi()\r\n    const { id } = useParams()\r\n\r\n    const [ loading, setLoading] = useState(true)\r\n    const [ adInfo, setAdInfo] = useState({})\r\n\r\n    useEffect( () => {\r\n        const getAdInfo = async (id) => {\r\n            const json = await api.getAd(id, true)\r\n            setAdInfo(json)\r\n            setLoading(false)\r\n        }\r\n        getAdInfo(id)\r\n    }, [])\r\n\r\n    function formatDate(date) {\r\n        let cDate = new Date(date)\r\n\r\n        let months = [ 'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']\r\n        let cDay = cDate.getDate()\r\n        let cMonth = cDate.getMonth()\r\n        let cYear = cDate.getFullYear()\r\n\r\n        return `${cDay} de ${months[cMonth]} de ${cYear}`\r\n        \r\n    }\r\n\r\n    return (    \r\n        <PageContainer>\r\n            {adInfo.category &&\r\n                <BreadChumb>\r\n                    Você está aqui:\r\n                    <Link to=\"/\">Home</Link>\r\n                    /\r\n                    <Link to={`/ads?state=${adInfo.stateName}`}> {adInfo.stateName} </Link> \r\n                    /\r\n                    <Link to={`/ads?state=${adInfo.stateName}&cat=${adInfo.category.slug}`}> {adInfo.category.name} </Link> \r\n                    / { adInfo.title} \r\n\r\n                </BreadChumb>\r\n            }\r\n\r\n            <PageArea>\r\n                <div className=\"leftSide\">\r\n                    <div className=\"box\">\r\n                        <div className=\"adImage\">\r\n                            { loading &&  <Fake height={300} />}\r\n                            { adInfo.images &&\r\n                                <Slide>\r\n                                    {adInfo.images.map((img, k) => \r\n                                        <div key={k} className=\"each-slide\">\r\n                                            <img src={img} alt=\"\" />      \r\n                                        </div>\r\n                                    )}\r\n                                </Slide>\r\n                            }\r\n                        </div>\r\n                        \r\n                        <div className=\"adsInfo\">\r\n                            <div className=\"adName\">\r\n                                { loading &&  <Fake height={30} />}\r\n                                { adInfo.title &&\r\n                                    <h2>{adInfo.title}</h2>\r\n                                }\r\n                                {adInfo.dateCreated &&\r\n                                    <small> Criado em:{formatDate(adInfo.dateCreated)} </small>\r\n                                }\r\n\r\n                                \r\n                            </div>\r\n                            \r\n                            <div className=\"adDescription\">\r\n                                 { loading &&  <Fake height={100} />}\r\n                                 {adInfo.description}\r\n\r\n                                 <hr />\r\n                                 {adInfo.views &&\r\n                                    <small> Visualizações: {adInfo.views}  </small>\r\n                                 }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rightSide\">\r\n                    <div className=\"box box--padding\">\r\n                        { loading &&  <Fake height={20} />}\r\n                        {adInfo.priceNegotiable &&\r\n                            \"Preço negociálvel\"\r\n                        }\r\n                        { !adInfo.priceNegotiable && adInfo.price &&\r\n                            <div className=\"price\">Preço: <span>R$ {adInfo.price}</span> </div>\r\n                        }\r\n                    </div>\r\n\r\n                    \r\n                    { loading &&  <Fake height={40} />} \r\n                    { adInfo.userInfo && \r\n                        <>\r\n                            <a href={`mailto:${adInfo.userInfo.email} `} target=\"_blank\" className=\"contactSellerLink\">Fale com o vendedor </a>\r\n                            <div className=\"createBuy box box--padding\">\r\n                             \r\n                                <strong>{adInfo.userInfo.name}</strong>\r\n                                <small> E-mail: {adInfo.userInfo.email} </small>\r\n                                <small>Estado: {adInfo.stateName} </small>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n            </PageArea>\r\n            \r\n            <OthersArea>\r\n                {adInfo.others && \r\n                    <>\r\n                        <h2>Outras ofertas do vendedor</h2>\r\n                        <div className=\"list\">\r\n                            {adInfo.others.map((i, k) => \r\n                                <AdItem key={k} data={i} />\r\n                            )}\r\n                        </div>\r\n                        \r\n                    </>\r\n                }\r\n            </OthersArea>\r\n        </PageContainer>\r\n    )\r\n}\r\n\r\nexport default SignIn","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\AdPage\\styled.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\SignIn\\index.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\SignIn\\styled.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\AddAd\\index.js",["137"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport MaskedInput from 'react-text-mask'\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\r\nimport { PageArea } from './styled' \r\nimport useApi from '../../helpers/OlxAPI'\r\n\r\n\r\nimport { PageContainer, PageTitle, ErrorMessage } from '../../components/MainComponents'\r\n\r\nfunction SignIn() {\r\n    const api = useApi()\r\n    const history = useHistory()\r\n\r\n    const filefield = useRef()\r\n    \r\n    const [ categoryList, setCategoryList] = useState([])\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [ category, setCategory] = useState('')\r\n    const [ price, setPrice] = useState('')\r\n    const [ priceNegotiable, setPriceNegotiable] = useState(false)\r\n    const [ description, setDescription] = useState('')\r\n\r\n    \r\n    const [ disabled, setDisabled] = useState(false)\r\n    const [ error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        const getCategories = async () => {\r\n            const cats = await api.getCategories()\r\n            setCategoryList(cats)\r\n        }\r\n        getCategories()\r\n    }, [])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setDisabled(true)\r\n        setError('')\r\n\r\n        let errors = []\r\n\r\n        if(!title.trim()) {\r\n            errors.push('Digite um título')\r\n        }\r\n\r\n        if( !category) {\r\n            errors.push('Selecione uma categoria')\r\n        }\r\n\r\n        if(errors.length === 0) {\r\n\r\n            const fData = new FormData()\r\n            fData.append('title', title)\r\n            fData.append('price', price)\r\n            fData.append('priceneg', priceNegotiable)\r\n            fData.append('desc', description)\r\n            fData.append('cat', category)\r\n\r\n            if(filefield.current.files.length > 0) {\r\n                for(let i = 0; i > filefield.current.files.length; i++) {\r\n                    fData.append('img', filefield.current.files[i])\r\n                }\r\n            }\r\n\r\n            const json = await api.addAd(fData)\r\n\r\n            if(!json.error) {\r\n                history.push(`/ad/${json.id} `)\r\n                return \r\n            } else {\r\n                setError(json.error)\r\n            }\r\n\r\n        } else {\r\n            setError(errors.join(\"\\n\"))\r\n        }\r\n\r\n        setDisabled(false)\r\n    }\r\n\r\n    const priceMask = createNumberMask({\r\n        prefix: 'R$  ',\r\n        includeThousandsSeparator: true,\r\n        thousandsSeparatorSymbol: '.', \r\n        allowDecimal: true,\r\n        decimalSymbol: ','\r\n    })\r\n\r\n    return (\r\n        <PageContainer>\r\n            <PageTitle>Postar um Anúncio</PageTitle>\r\n            <PageArea>\r\n                { error && \r\n                    <ErrorMessage> {error}</ErrorMessage>\r\n                }\r\n                <form onSubmit={handleSubmit}>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Titulo</div>\r\n                        <div className=\"area--input\">\r\n                            <input \r\n                                type=\"text\"\r\n                                disabled={disabled} \r\n                                value={title}\r\n                                onChange={e => setTitle(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Categoria</div>\r\n                        <div className=\"area--input\">\r\n                            <select disabled={disabled} onChange={e => setCategory(e.target.value)} required>\r\n                                <option></option>\r\n                                {categoryList && categoryList.map(i =>\r\n                                    <option key={i._id} value={i._id}> {i.name} </option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Preço</div>\r\n                        <div className=\"area--input\">\r\n                            <MaskedInput  \r\n                                mask={ priceMask }\r\n                                placeholder=\"R$ \"\r\n                                disabled={ disabled || priceNegotiable }\r\n                                value={ price}\r\n                                onChange={e => setPrice(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Preço Negociável</div>\r\n                        <div>\r\n                            <input \r\n                                type=\"checkbox\"\r\n                                disabled={disabled} \r\n                                value={priceNegotiable}\r\n                                onChange={e => setPriceNegotiable(!priceNegotiable)}\r\n                                \r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Descrição</div>\r\n                        <div className=\"area--input\">\r\n                            <textarea \r\n                                disabled={disabled}\r\n                                value={description}\r\n                                onChange={e => setDescription(e.target.value)}\r\n                            >\r\n\r\n                            </textarea>\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\">Imagens (1 ou mais )</div>\r\n                        <div className=\"area--input\">\r\n                            <input \r\n                                type=\"file\"\r\n                                disabled={disabled} \r\n                                ref = { filefield }\r\n                                multiple\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </label>\r\n                    <label className=\"area\">\r\n                        <div className=\"area--title\"></div>\r\n                        <div className=\"area--input\">\r\n                            <button disabled={disabled}>Adicionar Anúncio</button>\r\n                        </div>\r\n                    </label>\r\n                </form>\r\n            </PageArea>\r\n        </PageContainer>\r\n    )\r\n}\r\n\r\nexport default SignIn","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\AddAd\\styled.js",[],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\components\\RouteHandler.js",["138"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogged } from '../helpers/AuthHandler';\r\n\r\nexport default ({ children, ...rest }) => {\r\n    let logged = isLogged();\r\n    let authorized = (rest.private && !logged) ? false : true;\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={()=>\r\n                authorized ? children : <Redirect to=\"/signin\" />\r\n            }\r\n        />\r\n    );\r\n}","C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\Ads\\index.js",["139","140","141","142","143","144","145"],"C:\\Users\\Dev. Affonso\\Documents\\GitHub\\olx__front-end\\src\\pages\\Ads\\styled.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":6,"column":1,"nodeType":"152","endLine":13,"endColumn":2},{"ruleId":"150","severity":1,"message":"151","line":15,"column":1,"nodeType":"152","endLine":51,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":23,"column":8,"nodeType":"155","endLine":23,"endColumn":10,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"154","line":31,"column":8,"nodeType":"155","endLine":31,"endColumn":10,"suggestions":"157"},{"ruleId":"153","severity":1,"message":"154","line":42,"column":8,"nodeType":"155","endLine":42,"endColumn":10,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"151","line":137,"column":1,"nodeType":"152","endLine":137,"endColumn":28},{"ruleId":"153","severity":1,"message":"154","line":31,"column":8,"nodeType":"155","endLine":31,"endColumn":10,"suggestions":"159"},{"ruleId":"153","severity":1,"message":"160","line":25,"column":8,"nodeType":"155","endLine":25,"endColumn":10,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":111,"column":74,"nodeType":"164","endLine":111,"endColumn":89},{"ruleId":"153","severity":1,"message":"154","line":35,"column":8,"nodeType":"155","endLine":35,"endColumn":10,"suggestions":"165"},{"ruleId":"150","severity":1,"message":"151","line":5,"column":1,"nodeType":"152","endLine":17,"endColumn":2},{"ruleId":"166","severity":1,"message":"167","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"170","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":14},{"ruleId":"166","severity":1,"message":"171","line":15,"column":13,"nodeType":"168","messageId":"169","endLine":15,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":23,"column":8,"nodeType":"155","endLine":23,"endColumn":10,"suggestions":"172"},{"ruleId":"153","severity":1,"message":"154","line":31,"column":8,"nodeType":"155","endLine":31,"endColumn":10,"suggestions":"173"},{"ruleId":"153","severity":1,"message":"154","line":42,"column":8,"nodeType":"155","endLine":42,"endColumn":10,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":63,"column":41,"nodeType":"177","endLine":63,"endColumn":60},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.","ArrayExpression",["180"],["181"],["182"],["183"],"React Hook useEffect has missing dependencies: 'api' and 'id'. Either include them or remove the dependency array.",["184"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["185"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AdItem' is defined but never used.","'adList' is assigned a value but never used.",["186"],["187"],["188"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"189","fix":"191"},{"desc":"189","fix":"192"},{"desc":"189","fix":"193"},{"desc":"194","fix":"195"},{"desc":"189","fix":"196"},{"desc":"189","fix":"197"},{"desc":"189","fix":"198"},{"desc":"189","fix":"199"},"Update the dependencies array to be: [api]",{"range":"200","text":"201"},{"range":"202","text":"201"},{"range":"203","text":"201"},{"range":"204","text":"201"},"Update the dependencies array to be: [api, id]",{"range":"205","text":"206"},{"range":"207","text":"201"},{"range":"208","text":"201"},{"range":"209","text":"201"},{"range":"210","text":"201"},[705,707],"[api]",[910,912],[1182,1184],[944,946],[792,794],"[api, id]",[1153,1155],[693,695],[898,900],[1170,1172]]